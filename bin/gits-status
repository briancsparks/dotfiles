#!/bin/bash -e

do_clean() {
  pushd . > /dev/null

  DIR="$1"

  cd $DIR
  local mod=$(git status --short | wc -l)
  local new=$(git ls-files -o --exclude-standard | wc -l)
  local branch=$(git status | egrep -i 'on branch .*$' | cut -d' ' -f3-)

  if [[ $new == 0 && $mod == 0 ]]; then
    printf -- "------------------------- clean ---- %s %-14s %s\n"  $(hostname)  $branch  $DIR
    git status | sed -n '/up-to-date/d;/Your branch is/p'
  fi

  popd > /dev/null
}

do_changed() {
  pushd . > /dev/null

  DIR="$1"

  cd $DIR
  local mod=$(git status --short | wc -l)
  local new=$(git ls-files -o --exclude-standard | wc -l)
  local branch=$(git status | egrep -i 'on branch .*$' | cut -d' ' -f3-)

  if [[ $new != 0 || $mod != 0 ]]; then
    printf -- "------------------------------------ %s %-14s %s\n"  $(hostname)  $branch  $DIR
    git status --short
  fi

  popd > /dev/null
}

target_dir="$1"

if ! [[ -d $target_dir ]]; then
  if [[ $# > 0 ]]; then
    eval "$(cli-shezargs $@)"

    color="$1"
    stack="$2"
    for ip in `amips $color $stack`; do
      echo $ip
      sshix $ip 'gits-status' | egrep --line-buffered -v -i yoshi | egrep -v '^push\.default' || true
    done

    exit 0
  fi

  target_dir="${HOME}/dev"
fi

git config --global --get 'user.email' | egrep -i yoshi && git config --global --list

repositories="$(find $target_dir -type d | egrep '\.git$' | egrep -v 'X/\.git$' | egrep -v '/dev/[^/]+X/' | sort)"

# Display changed
for d in $repositories; do
  dir="$(dirname $(dirname $d/..))"

  do_changed $dir
done

# Display clean dirs
for d in $repositories; do
  dir="$(dirname $(dirname $d/..))"

  do_clean $dir
done

do_changed "$HOME/dotfiles"
do_clean "$HOME/dotfiles"


