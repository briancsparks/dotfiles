#!/bin/bash -e

readlink_f() { which greadlink > /dev/null 2> /dev/null && greadlink -f $1 || readlink -f $1; }
script_dir="$( cd "$(dirname "$( readlink_f "${BASH_SOURCE[0]}" )" )" && pwd )"

errcho() { echo "$@" 1>&2; }
die() { errcho "$@"; exit 1; }

# -----
# Tell user what needs to be done so far -- the things we can auto-detect
if git branch > /dev/null 2> /dev/null; then
  br=$(git branch | grep '^\*' | tr -d '*' | tr -d ' ')

  if [[ $br != develop ]]; then
    errcho "Must be on clean develop branch"
    exit 1
  fi

  mod=$(git status --short | grep -o '^\s*M' | wc -l | tr -d ' ')
  if [[ $mod > 0 ]]; then
    errcho "Must be on clean develop branch (${mod} files are modified)."
    exit 1
  fi

  new=$(git ls-files -o --exclude-standard | wc -l | tr -d ' ')
  if [[ $new > 0 ]]; then
    errcho "Must be on clean develop branch (${new} files are new)."
    exit 1
  fi

fi

# -----
# Tell user what needs to be done so far -- the things we cannot auto-detect
echo "You must have bumped the version number before running this script."
echo "Press Ctrl+C if not.  Continuing in 5 seconds..."

sleep 5

# -----
# Push the develop branch, get user to confirm it builds on GH
echo "---------------------------------------------------------------"
echo "Pushing develop branch..."
#git push

echo "\nGo to github and make sure the build works."
echo "Hit enter or Ctrl+C"
read x

exit 0

## -----
## Merge develop into main
#
#echo "---------------------------------------------------------------"
#echo "Merging into main..."
#
#echo "Checking out main:"
#git checkout main
#
#echo "\nMerging develop -- You have to comment on the commit"
#git merge --no-ff develop
#
#echo "\nPushing main to github"
#git push

echo "Done"


