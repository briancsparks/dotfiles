set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim


call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"Plugin 'vim-ctrlspace/vim-ctrlspace'
Plugin 'mxw/vim-jsx'
Plugin 'pangloss/vim-javascript'
Plugin 'rust-lang/rust.vim'
Plugin 'kballard/vim-swift'
Plugin 'tpope/vim-markdown'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'fatih/vim-go'
Plugin 'jneen/ragel.vim'
Plugin 'chr4/nginx.vim'
Plugin 'qualiabyte/vim-colorstepper'

"    " The following are examples of different formats supported.
"    " Keep Plugin commands between vundle#begin/end.
"    " plugin on GitHub repo
"    Plugin 'tpope/vim-fugitive'
"    " plugin from http://vim-scripts.org/vim/scripts.html
"    " Plugin 'L9'
"    " Git plugin not hosted on GitHub
"    Plugin 'git://git.wincent.com/command-t.git'
"    " git repos on your local machine (i.e. when working on your own plugin)
"    Plugin 'file:///home/gmarik/path/to/plugin'
"    " The sparkup vim script is in a subdirectory of this repo called vim.
"    " Pass the path to set the runtimepath properly.
"    Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
"    " Install L9 and avoid a Naming conflict if you've already installed a
"    " different version somewhere else.
"    " Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required


filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


" ----- My config -----

"
"
" Use: ':so %' to reload this .vimrc file
"
"

:let mapleader = ","

:set nocompatible
:set hidden
:set showcmd
:set nu
:syntax on
:set ruler
:set clipboard=unnamed
":set autoread
highlight StatusLine ctermfg=blue ctermbg=yellow

" Show error whitespace
highlight ErrorWhitespace ctermbg=red guibg=red
match ErrorWhitespace /\s\+$/
autocmd BufWinEnter * match ErrorWhitespace /\s\+$/
autocmd InsertEnter * match ErrorWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ErrorWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()
autocmd ColorScheme * highlight ErrorWhitespace ctermbg=red guibg=red

":set background=dark
"let g:solarized_termcolors=256
"colorscheme solarized

" Whitespace
:set nowrap
:set tabstop=2
:set shiftwidth=2
:set expandtab
:set smartindent
:set backspace=indent,eol,start

" Searching
:set hlsearch
:set incsearch
:set ignorecase
:set smartcase

:set noswapfile


":set path=./**

"
" --------------- key mappings ----------------
"

nmap <unique> <F9> <Plug>ColorstepPrev
nmap <unique> <S-F9> <Plug>ColorstepNext
nmap <unique> <M-F9> <Plug>ColorstepReload

" Next / Previous tab
:noremap <F7> :tabp<CR>
:noremap <F8> :tabn<CR>

" Open new tab
:noremap <C-t> <esc>:tabe<CR>,t

" Open file from the same dir
:noremap <Leader>e :e <C-R>=expand("%:p:h") . '/'<CR>

" Clear search
:nnoremap <silent> ,. :nohlsearch<CR>

" Edit / Source .vimrc
:nnoremap <leader>ev :vsplit $MYVIMRC<cr>
:nnoremap <leader>sv :source $MYVIMRC<cr>

" " Use jk as <ESC>
" :inoremap jk <esc>


"
" ------------------------------------- // to search while in visual mode -------------------------------
"
:vnoremap // y/<C-R>"<CR>


" ---------------------------------------------------------------------------

" :color desert
" :color delek
:color torte

"
" ------------------------------------- vim-javascript  --------------------------------------------------
"
let g:javascript_plugin_jsdoc = 1
let g:javascript_plugin_flow = 1

"
" ------------------------------------- vim-jsx  --------------------------------------------------
"
let g:jsx_ext_required = 0 " Allow JSX in normal JS files


" Do not have to use :set paste ever again!
if &term =~ "xterm.*"
    let &t_ti = &t_ti . "\e[?2004h"
    let &t_te = "\e[?2004l" . &t_te
    function! XTermPasteBegin(ret)
        set pastetoggle=<Esc>[201~
        set paste
        return a:ret
    endfunction
    map <expr> <Esc>[200~ XTermPasteBegin("i")
    imap <expr> <Esc>[200~ XTermPasteBegin("")
    vmap <expr> <Esc>[200~ XTermPasteBegin("c")
    cmap <Esc>[200~ <nop>
    cmap <Esc>[201~ <nop>
endif




