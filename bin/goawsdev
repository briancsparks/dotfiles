#!/bin/bash -e

die() {
  echo "$@"
  exit 2
}

sshix() {
  ssh -A -o "StrictHostKeyChecking no" -o "UserKnownHostsFile=/dev/null" -o "LogLevel=quiet" "$@"
}

set_cache() {
  local zz_goawsdevjson="$(aws --region us-east-1 ec2 describe-instances --filters Name=tag:bcs:development,Values=)"
  redis-cli SET 'bcs:awsdevinstance' "$zz_goawsdevjson" > /dev/null
  redis-cli EXPIRE 'bcs:awsdevinstance' 3600 > /dev/null

  echo "$zz_goawsdevjson"
}

clear_cache() {
  redis-cli DEL 'bcs:awsdevinstance' > /dev/null
}

#set -x

connect_timeout=3

zz_goawsdevjson="$(redis-cli GET 'bcs:awsdevinstance')"

if [[ -z $zz_goawsdevjson ]]; then
  zz_goawsdevjson="$(set_cache)"
  #redis-cli SET 'bcs:awsdevinstance' "$zz_goawsdevjson" > /dev/null
  #redis-cli EXPIRE 'bcs:awsdevinstance' 3600 > /dev/null
fi

if [[ $state != running ]]; then
  zz_goawsdevjson="$(set_cache)"
fi

# Is it running?
state="$(redis-cli GET 'bcs:awsdevinstance' | jq -r '.Reservations[].Instances[].State.Name')"
instance_id="$(redis-cli GET 'bcs:awsdevinstance' | jq -r '.Reservations[].Instances[].InstanceId')"
if [[ $state == stopped ]]; then
  echo "Starting..."
  aws --region us-east-1 ec2 start-instances --instance-ids "$instance_id"
  for ((;;)); do
    state="$(set_cache | jq -r '.Reservations[].Instances[].State.Name')"
    [[ $state == running ]] && break
    sleep 2
  done

  connect_timeout=15
  set_cache
fi

if [[ $state != running ]]; then
  echo "Not running"
  exit 1
fi

# What is the DNS name?
name="$(redis-cli GET 'bcs:awsdevinstance' | jq -r '.Reservations[].Instances[].PublicDnsName')"
[[ `echo $name | wc -c` -lt 2 ]] && die "Cannot find instance"

[[ -z $instance_user ]] && instance_user="$1"
[[ -z $instance_user ]] && instance_user="$(redis-cli GET 'bcs:awsdevinstance' | jq -r '.Reservations[].Instances[] .Tags[]|select(.Key=="username")|.Value')"


if ! sshix -o "ConnectTimeout $connect_timeout" "${instance_user}@${name}" "$@"; then
  status="$?"
  old_state="$state"
  state="$(set_cache | jq -r '.Reservations[].Instances[].State.Name')"
  echo "Stale cache. Try again (was: $old_state, now: $state) [$status]"
fi

