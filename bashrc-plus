#!/usr/bin/env bash

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

alias sed='sed -r'

#alias vim='vim -p'
#alias tree='tree -I node_modules -I ppds'

# A real clear-screen

maccls() { osascript -e 'tell application "System Events" to keystroke "k" using command down'; }

if [ "$TERM_PROGRAM" == "Apple_Terminal" ]; then
  alias cls='maccls'
else
  alias cls='printf "\ec"'
fi

modified()
{
  git ls-files -mo --exclude-standard
}

alias fn='find . -type f | egrep -i '
alias fd='find . -type d | egrep -i '

# We can do better?
test -f $HOME/local/bin/fnn && alias fn='fnn'
test -f $HOME/local/bin/fdd && alias fd='fdd'

alias vim='vim -p'
alias tree="tree -I 'node_modules|ppds|_tmp'"
alias wip='git commit -am "WIP"'

alias _run='underscore run '
alias _extract='underscore extract '
alias _map='underscore map '
alias _reduce='underscore reduce '
alias _reduceRigh='underscore reduceRigh '
alias _reduceRight='underscore reduceRight '
alias _select='underscore select '
alias _find='underscore find '
alias _filter='underscore filter '
alias _reject='underscore reject '
alias _flatten='underscore flatten '
alias _pluck='underscore pluck '
alias _keys='underscore keys '
alias _values='underscore values '
alias _extend='underscore extend '
alias _defaults='underscore defaults '
alias _any='underscore any '
alias _all='underscore all '
alias _template='underscore template '
alias _print='underscore print --color '


__git_changes() {
  if [[ $# == 1 ]]; then
    git diff --name-only HEAD HEAD~${1}
  elif [[ $# == 0 ]]; then
    git diff --name-only HEAD HEAD~1
  elif [[ $# == 2 ]]; then
    git diff --name-only HEAD~${1} HEAD~${2}
  fi
}

__git_modified() {
  git ls-files -m -o --exclude-standard
}

alias gch="__git_changes $@"      # -- what files changed in the last N commits?
alias gw='__git_modified $@'
alias vimw='vim `__git_modified $@`'   # -- vim files that are changed from git's POV
alias brs='git branch | grep -v origin'     # -- Show branches on the local machine

__difftool() {
  git difftool -t meld -y "$@" &> /dev/null
}
alias difftool="__difftool $@"

modified()
{
  git ls-files -mo --exclude-standard
}

test -f ${HOME}/dotfiles/setprompt && . ${HOME}/dotfiles/setprompt
test -f ${HOME}/dev/dotfiles/setprompt && . ${HOME}/dev/dotfiles/setprompt

true

