
kubectl apply -k "lib/k8s/config/overlays/development/" --record

cd .\lib\k8s\tiers\apps\check-cluster\
docker build -t "quicknet-k8s-check-cluster" .
docker build -t "quicknet-k8s-check-cluster" .
docker tag "quicknet-k8s-check-cluster:latest" "briancsparks/quicknet-k8s-check-cluster:latest"
docker push "briancsparks/quicknet-k8s-check-cluster:latest"
cd ../../../../..

kubectl get deployments
kubectl get pods
kops validate cluster
kops edit ig nodes
kops update cluster --yes
kops rolling-update cluster --yes

# Show all resources
kops delete cluster

kubectl get deployments -o json | jq '.items[].status'
kubectl get deployments -o json | jq '.items[].metadata'
kubectl logs -f --all-containers -l app=nginx-ingress
kubectl describe pods
kubectl describe pod redis-aaaa-bbbb
kubectl get nodes -o json | jq .
kubectl delete pods -l app=check-cluster
kubectl get pods -l app=mongodb


kubectl rollout status
kubectl rollout status deployment/redis
kubectl rollout undo deployment/mongodb

kubectl api-resources
kubectl get services
kubectl get configmap dev-environment
kubectl get configmap nginxconfig -o json | jq -r '.data["default.conf"'


# ???
kubectl get deployment mongodb -o json | kubectl replace -f -



# vim: ft=sh:

